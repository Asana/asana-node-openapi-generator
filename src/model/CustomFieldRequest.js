/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomFieldBase from './CustomFieldBase';
import CustomFieldCompactAllOfDateValue from './CustomFieldCompactAllOfDateValue';
import CustomFieldRequestAllOf from './CustomFieldRequestAllOf';
import EnumOption from './EnumOption';

/**
 * The CustomFieldRequest model module.
 * @module model/CustomFieldRequest
 * @version 1.0.0
 */
class CustomFieldRequest {
    /**
     * Constructs a new <code>CustomFieldRequest</code>.
     * @alias module:model/CustomFieldRequest
     * @implements module:model/CustomFieldBase
     * @implements module:model/CustomFieldRequestAllOf
     * @param workspace {String} *Create-Only* The workspace to create a custom field in.
     */
    constructor(workspace) { 
        CustomFieldBase.initialize(this);CustomFieldRequestAllOf.initialize(this, workspace);
        CustomFieldRequest.initialize(this, workspace);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workspace) { 
        obj['workspace'] = workspace;
    }

    /**
     * Constructs a <code>CustomFieldRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomFieldRequest} obj Optional instance to populate.
     * @return {module:model/CustomFieldRequest} The populated <code>CustomFieldRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomFieldRequest();
            CustomFieldBase.constructFromObject(data, obj);
            CustomFieldRequestAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resource_subtype')) {
                obj['resource_subtype'] = ApiClient.convertToType(data['resource_subtype'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('enum_options')) {
                obj['enum_options'] = ApiClient.convertToType(data['enum_options'], [EnumOption]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('date_value')) {
                obj['date_value'] = CustomFieldCompactAllOfDateValue.constructFromObject(data['date_value']);
            }
            if (data.hasOwnProperty('enum_value')) {
                obj['enum_value'] = ApiClient.convertToType(data['enum_value'], EnumOption);
            }
            if (data.hasOwnProperty('multi_enum_values')) {
                obj['multi_enum_values'] = ApiClient.convertToType(data['multi_enum_values'], [EnumOption]);
            }
            if (data.hasOwnProperty('number_value')) {
                obj['number_value'] = ApiClient.convertToType(data['number_value'], 'Number');
            }
            if (data.hasOwnProperty('text_value')) {
                obj['text_value'] = ApiClient.convertToType(data['text_value'], 'String');
            }
            if (data.hasOwnProperty('display_value')) {
                obj['display_value'] = ApiClient.convertToType(data['display_value'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('custom_label')) {
                obj['custom_label'] = ApiClient.convertToType(data['custom_label'], 'String');
            }
            if (data.hasOwnProperty('custom_label_position')) {
                obj['custom_label_position'] = ApiClient.convertToType(data['custom_label_position'], 'String');
            }
            if (data.hasOwnProperty('is_global_to_workspace')) {
                obj['is_global_to_workspace'] = ApiClient.convertToType(data['is_global_to_workspace'], 'Boolean');
            }
            if (data.hasOwnProperty('has_notifications_enabled')) {
                obj['has_notifications_enabled'] = ApiClient.convertToType(data['has_notifications_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('workspace')) {
                obj['workspace'] = ApiClient.convertToType(data['workspace'], 'String');
            }
            if (data.hasOwnProperty('people_value')) {
                obj['people_value'] = ApiClient.convertToType(data['people_value'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
CustomFieldRequest.prototype['gid'] = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
CustomFieldRequest.prototype['resource_type'] = undefined;

/**
 * The name of the custom field.
 * @member {String} name
 */
CustomFieldRequest.prototype['name'] = undefined;

/**
 * The type of the custom field. Must be one of the given values. 
 * @member {module:model/CustomFieldRequest.ResourceSubtypeEnum} resource_subtype
 */
CustomFieldRequest.prototype['resource_subtype'] = undefined;

/**
 * *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values. 
 * @member {module:model/CustomFieldRequest.TypeEnum} type
 */
CustomFieldRequest.prototype['type'] = undefined;

/**
 * *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
 * @member {Array.<module:model/EnumOption>} enum_options
 */
CustomFieldRequest.prototype['enum_options'] = undefined;

/**
 * *Conditional*. Determines if the custom field is enabled or not.
 * @member {Boolean} enabled
 */
CustomFieldRequest.prototype['enabled'] = undefined;

/**
 * @member {module:model/CustomFieldCompactAllOfDateValue} date_value
 */
CustomFieldRequest.prototype['date_value'] = undefined;

/**
 * @member {module:model/EnumOption} enum_value
 */
CustomFieldRequest.prototype['enum_value'] = undefined;

/**
 * *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.
 * @member {Array.<module:model/EnumOption>} multi_enum_values
 */
CustomFieldRequest.prototype['multi_enum_values'] = undefined;

/**
 * *Conditional*. This number is the value of a `number` custom field.
 * @member {Number} number_value
 */
CustomFieldRequest.prototype['number_value'] = undefined;

/**
 * *Conditional*. This string is the value of a `text` custom field.
 * @member {String} text_value
 */
CustomFieldRequest.prototype['text_value'] = undefined;

/**
 * A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.
 * @member {String} display_value
 */
CustomFieldRequest.prototype['display_value'] = undefined;

/**
 * [Opt In](/docs/input-output-options). The description of the custom field.
 * @member {String} description
 */
CustomFieldRequest.prototype['description'] = undefined;

/**
 * Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.
 * @member {Number} precision
 */
CustomFieldRequest.prototype['precision'] = undefined;

/**
 * The format of this custom field.
 * @member {module:model/CustomFieldRequest.FormatEnum} format
 */
CustomFieldRequest.prototype['format'] = undefined;

/**
 * ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
 * @member {String} currency_code
 */
CustomFieldRequest.prototype['currency_code'] = undefined;

/**
 * This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
 * @member {String} custom_label
 */
CustomFieldRequest.prototype['custom_label'] = undefined;

/**
 * Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
 * @member {module:model/CustomFieldRequest.CustomLabelPositionEnum} custom_label_position
 */
CustomFieldRequest.prototype['custom_label_position'] = undefined;

/**
 * This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.
 * @member {Boolean} is_global_to_workspace
 */
CustomFieldRequest.prototype['is_global_to_workspace'] = undefined;

/**
 * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
 * @member {Boolean} has_notifications_enabled
 */
CustomFieldRequest.prototype['has_notifications_enabled'] = undefined;

/**
 * *Create-Only* The workspace to create a custom field in.
 * @member {String} workspace
 */
CustomFieldRequest.prototype['workspace'] = undefined;

/**
 * *Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.
 * @member {Array.<String>} people_value
 */
CustomFieldRequest.prototype['people_value'] = undefined;


// Implement CustomFieldBase interface:
/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
CustomFieldBase.prototype['gid'] = undefined;
/**
 * The base type of this resource.
 * @member {String} resource_type
 */
CustomFieldBase.prototype['resource_type'] = undefined;
/**
 * The name of the custom field.
 * @member {String} name
 */
CustomFieldBase.prototype['name'] = undefined;
/**
 * The type of the custom field. Must be one of the given values. 
 * @member {module:model/CustomFieldBase.ResourceSubtypeEnum} resource_subtype
 */
CustomFieldBase.prototype['resource_subtype'] = undefined;
/**
 * *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values. 
 * @member {module:model/CustomFieldBase.TypeEnum} type
 */
CustomFieldBase.prototype['type'] = undefined;
/**
 * *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
 * @member {Array.<module:model/EnumOption>} enum_options
 */
CustomFieldBase.prototype['enum_options'] = undefined;
/**
 * *Conditional*. Determines if the custom field is enabled or not.
 * @member {Boolean} enabled
 */
CustomFieldBase.prototype['enabled'] = undefined;
/**
 * @member {module:model/CustomFieldCompactAllOfDateValue} date_value
 */
CustomFieldBase.prototype['date_value'] = undefined;
/**
 * @member {module:model/EnumOption} enum_value
 */
CustomFieldBase.prototype['enum_value'] = undefined;
/**
 * *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.
 * @member {Array.<module:model/EnumOption>} multi_enum_values
 */
CustomFieldBase.prototype['multi_enum_values'] = undefined;
/**
 * *Conditional*. This number is the value of a `number` custom field.
 * @member {Number} number_value
 */
CustomFieldBase.prototype['number_value'] = undefined;
/**
 * *Conditional*. This string is the value of a `text` custom field.
 * @member {String} text_value
 */
CustomFieldBase.prototype['text_value'] = undefined;
/**
 * A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.
 * @member {String} display_value
 */
CustomFieldBase.prototype['display_value'] = undefined;
/**
 * [Opt In](/docs/input-output-options). The description of the custom field.
 * @member {String} description
 */
CustomFieldBase.prototype['description'] = undefined;
/**
 * Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.
 * @member {Number} precision
 */
CustomFieldBase.prototype['precision'] = undefined;
/**
 * The format of this custom field.
 * @member {module:model/CustomFieldBase.FormatEnum} format
 */
CustomFieldBase.prototype['format'] = undefined;
/**
 * ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
 * @member {String} currency_code
 */
CustomFieldBase.prototype['currency_code'] = undefined;
/**
 * This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
 * @member {String} custom_label
 */
CustomFieldBase.prototype['custom_label'] = undefined;
/**
 * Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
 * @member {module:model/CustomFieldBase.CustomLabelPositionEnum} custom_label_position
 */
CustomFieldBase.prototype['custom_label_position'] = undefined;
/**
 * This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.
 * @member {Boolean} is_global_to_workspace
 */
CustomFieldBase.prototype['is_global_to_workspace'] = undefined;
/**
 * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
 * @member {Boolean} has_notifications_enabled
 */
CustomFieldBase.prototype['has_notifications_enabled'] = undefined;
// Implement CustomFieldRequestAllOf interface:
/**
 * *Create-Only* The workspace to create a custom field in.
 * @member {String} workspace
 */
CustomFieldRequestAllOf.prototype['workspace'] = undefined;
/**
 * *Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.
 * @member {Array.<String>} people_value
 */
CustomFieldRequestAllOf.prototype['people_value'] = undefined;



/**
 * Allowed values for the <code>resource_subtype</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldRequest['ResourceSubtypeEnum'] = {

    /**
     * value: "text"
     * @const
     */
    "text": "text",

    /**
     * value: "enum"
     * @const
     */
    "enum": "enum",

    /**
     * value: "multi_enum"
     * @const
     */
    "multi_enum": "multi_enum",

    /**
     * value: "number"
     * @const
     */
    "number": "number",

    /**
     * value: "date"
     * @const
     */
    "date": "date",

    /**
     * value: "people"
     * @const
     */
    "people": "people"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldRequest['TypeEnum'] = {

    /**
     * value: "text"
     * @const
     */
    "text": "text",

    /**
     * value: "enum"
     * @const
     */
    "enum": "enum",

    /**
     * value: "multi_enum"
     * @const
     */
    "multi_enum": "multi_enum",

    /**
     * value: "number"
     * @const
     */
    "number": "number"
};


/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldRequest['FormatEnum'] = {

    /**
     * value: "currency"
     * @const
     */
    "currency": "currency",

    /**
     * value: "identifier"
     * @const
     */
    "identifier": "identifier",

    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};


/**
 * Allowed values for the <code>custom_label_position</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldRequest['CustomLabelPositionEnum'] = {

    /**
     * value: "prefix"
     * @const
     */
    "prefix": "prefix",

    /**
     * value: "suffix"
     * @const
     */
    "suffix": "suffix"
};



export default CustomFieldRequest;


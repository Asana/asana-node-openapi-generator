/**
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumOption from './EnumOption';

/**
 * The CustomFieldBaseAllOf model module.
 * @module model/CustomFieldBaseAllOf
 * @version 1.0.0
 */
class CustomFieldBaseAllOf {
    /**
     * Constructs a new <code>CustomFieldBaseAllOf</code>.
     * @alias module:model/CustomFieldBaseAllOf
     */
    constructor() { 
        
        CustomFieldBaseAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomFieldBaseAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomFieldBaseAllOf} obj Optional instance to populate.
     * @return {module:model/CustomFieldBaseAllOf} The populated <code>CustomFieldBaseAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomFieldBaseAllOf();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enum_options')) {
                obj['enum_options'] = ApiClient.convertToType(data['enum_options'], [EnumOption]);
            }
            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('custom_label')) {
                obj['custom_label'] = ApiClient.convertToType(data['custom_label'], 'String');
            }
            if (data.hasOwnProperty('custom_label_position')) {
                obj['custom_label_position'] = ApiClient.convertToType(data['custom_label_position'], 'String');
            }
            if (data.hasOwnProperty('is_global_to_workspace')) {
                obj['is_global_to_workspace'] = ApiClient.convertToType(data['is_global_to_workspace'], 'Boolean');
            }
            if (data.hasOwnProperty('has_notifications_enabled')) {
                obj['has_notifications_enabled'] = ApiClient.convertToType(data['has_notifications_enabled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * [Opt In](/docs/input-output-options). The description of the custom field.
 * @member {String} description
 */
CustomFieldBaseAllOf.prototype['description'] = undefined;

/**
 * *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
 * @member {Array.<module:model/EnumOption>} enum_options
 */
CustomFieldBaseAllOf.prototype['enum_options'] = undefined;

/**
 * Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.
 * @member {Number} precision
 */
CustomFieldBaseAllOf.prototype['precision'] = undefined;

/**
 * The format of this custom field.
 * @member {module:model/CustomFieldBaseAllOf.FormatEnum} format
 */
CustomFieldBaseAllOf.prototype['format'] = undefined;

/**
 * ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
 * @member {String} currency_code
 */
CustomFieldBaseAllOf.prototype['currency_code'] = undefined;

/**
 * This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
 * @member {String} custom_label
 */
CustomFieldBaseAllOf.prototype['custom_label'] = undefined;

/**
 * Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
 * @member {module:model/CustomFieldBaseAllOf.CustomLabelPositionEnum} custom_label_position
 */
CustomFieldBaseAllOf.prototype['custom_label_position'] = undefined;

/**
 * This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.
 * @member {Boolean} is_global_to_workspace
 */
CustomFieldBaseAllOf.prototype['is_global_to_workspace'] = undefined;

/**
 * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
 * @member {Boolean} has_notifications_enabled
 */
CustomFieldBaseAllOf.prototype['has_notifications_enabled'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldBaseAllOf['FormatEnum'] = {

    /**
     * value: "currency"
     * @const
     */
    "currency": "currency",

    /**
     * value: "identifier"
     * @const
     */
    "identifier": "identifier",

    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage",

    /**
     * value: "custom"
     * @const
     */
    "custom": "custom",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};


/**
 * Allowed values for the <code>custom_label_position</code> property.
 * @enum {String}
 * @readonly
 */
CustomFieldBaseAllOf['CustomLabelPositionEnum'] = {

    /**
     * value: "prefix"
     * @const
     */
    "prefix": "prefix",

    /**
     * value: "suffix"
     * @const
     */
    "suffix": "suffix"
};



export default CustomFieldBaseAllOf;

